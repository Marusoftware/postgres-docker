name: Docker Image Build and Push
on:
  workflow_dispatch:
  push:
    branches:
      main
env:
  REPO: marusoftware/postgres
concurrency:
  group: ${{ github.ref_name }}
  cancel-in-progress: true
jobs:
  buildx:
    env:
      TAGS: |
        type=sha,format=long
        type=raw,value=${{ matrix.distro }},enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
    runs-on:
      - self-hosted
      - ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
        distro:
          - alpine
          - bullseye
    permissions:
      contents: read
      packages: write
    steps:
      - name: Set PLATFORM_PAIR
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
      - name: Set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ env.OWNER_LC }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to Dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Extract docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
              ${{ env.REPO }}
              ghcr.io/${{ env.REPO }}
          tags: ${{ env.TAGS }}
      - name: Build image and push (by digest)
        id: build
        uses: docker/build-push-action@v5
        with:
          platforms: ${{ matrix.platform }}
          file: Dockerfile_${{ matrix.distro }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=ghcr.io/${{env.REPO}},push-by-digest=true,name-canonical=true,push=true
      - name: Export digest
        run: |
          mkdir -p ./digests/${{ matrix.distro }}
          digest="${{ steps.build.outputs.digest }}"
          touch "./digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.distro }}-${{ env.PLATFORM_PAIR }}
          path: ./digests/*
          if-no-files-found: error
          retention-days: 1
  merge:
    env:
      TAGS: |
        type=sha,format=long
        type=raw,value=${{ matrix.distro }},enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
    permissions:
      packages: write
    runs-on: [self-hosted, Linux]
    strategy:
      fail-fast: false
      matrix:
        distro:
          - alpine
          - bullseye
    needs:
      - buildx
    steps:
      - name: Set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ./digests
          pattern: digests-${{ matrix.distro }}-*
          merge-multiple: true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          tags: ${{ env.TAGS }}
          images: |
              ${{ env.REPO }}
              ghcr.io/${{ env.REPO }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ env.OWNER_LC }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to Dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Create manifest list and push
        working-directory: ./digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf 'ghcr.io/${{ env.REPO }}@sha256:%s ' *)
